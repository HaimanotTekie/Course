// Generated with Genova.

package no.course.domain.generated;

import java.util.Set;
import no.course.domain.StudentCourse;
import no.course.domain.Assignment;

/**
 * This file will be overwritten the next time it is generated from Genova.
 */
@SuppressWarnings("all")
public abstract class CourseDefault {
    
    private String code;
    private int id;
    private boolean isActive;
    private String name;
    private Set<StudentCourse> theStudentCourse;
    private Set<Assignment> belongs-to;
    
    /** Default constructor. */
    protected CourseDefault() {
        super();
    }
    
    /**
     * Access method for code.
     *
     * @return the current value of code
     */
    public String getCode() {
        return code;
    }
    
    /**
     * Setter method for code.
     *
     * @param aCode the new value for code
     */
    public void setCode(final String aCode) {
        code = aCode;
    }
    
    /**
     * Access method for id.
     *
     * @return the current value of id
     */
    public int getId() {
        return id;
    }
    
    /**
     * Setter method for id.
     *
     * @param aId the new value for id
     */
    public void setId(final int aId) {
        id = aId;
    }
    
    /**
     * Access method for isActive.
     *
     * @return true if and only if isActive is currently true
     */
    public boolean getIsActive() {
        return isActive;
    }
    
    /**
     * Setter method for isActive.
     *
     * @param aIsActive the new value for isActive
     */
    public void setIsActive(final boolean aIsActive) {
        isActive = aIsActive;
    }
    
    /**
     * Access method for name.
     *
     * @return the current value of name
     */
    public String getName() {
        return name;
    }
    
    /**
     * Setter method for name.
     *
     * @param aName the new value for name
     */
    public void setName(final String aName) {
        name = aName;
    }
    
    /**
     * Access method for theStudentCourse.
     *
     * @return the current value of theStudentCourse
     */
    public Set<StudentCourse> getTheStudentCourse() {
        return theStudentCourse;
    }
    
    /**
     * Setter method for theStudentCourse.
     *
     * @param aTheStudentCourse the new value for theStudentCourse
     */
    public void setTheStudentCourse(final Set<StudentCourse> aTheStudentCourse) {
        theStudentCourse = aTheStudentCourse;
    }
    
    /**
     * Access method for belongs-to.
     *
     * @return the current value of belongs-to
     */
    public Set<Assignment> getBelongs-to() {
        return belongs-to;
    }
    
    /**
     * Setter method for belongs-to.
     *
     * @param aBelongs-to the new value for belongs-to
     */
    public void setBelongs-to(final Set<Assignment> aBelongs-to) {
        belongs-to = aBelongs-to;
    }
    
}
